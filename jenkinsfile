pipeline {
    agent any
    environment {
        PATH = "/usr/local/bin:/usr/bin:$PATH:$MVN_HOME/bin:$JAVA_HOME/bin"
        NAMESPACE="parking"
    }

    stages {
        
        stage('Pull Code') {
            steps {
               sh 'set -x'
                // Get some code from a GitHub repository
                git 'git@192.168.56.231:car-service.git'
                sh "git checkout -B ${params.BRANCH} origin/${params.BRANCH} -q -f"
                sh 'pwd'
                sh 'ls -al'
            }

        }
        
        stage('Build') {
            steps {
                sh 'mvn clean package -Dmaven.test.skip=true -U --settings settings.xml'
            }

        }
        
        stage('Deploy') {
            steps {
                sh """
                    TAG=`date '+%Y%m%d-%H%M%S'`
                    echo "\$TAG"
                    REGISTRY_URL='192.168.1.37:5000'
                    ##build image
                    IMAGE_URL="\$REGISTRY_URL/\$JOB_NAME:\$TAG"
                    echo "\$IMAGE_URL"

                    docker build -t \$JOB_NAME:"\$TAG" .
                    IMAGE_ID=`docker images | grep "\$JOB_NAME" | grep "\$TAG" | awk -F ' ' '{print \$3}'`
                    docker tag "\$IMAGE_ID" "\$IMAGE_URL"
                    docker push "\$IMAGE_URL"
                    docker rmi -f "\$IMAGE_ID"

                    scp car-service.yaml deploy.sh root@192.168.56.231:/tmp
                    ssh root@192.168.56.231 "chmod 700 /tmp/deploy.sh"
                    ssh root@192.168.56.231 "cd /tmp && ./deploy.sh \$NAMESPACE \$TAG \$JOB_NAME ${params.REPLICAS}"
                    ##ssh root@192.168.56.231 "rm /tmp/{car-service.yaml,deploy.sh} -f"
                """
            }

        }
    }
}

